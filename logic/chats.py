import os

import streamlit as st
from openai import OpenAI
from streamlit_lottie import st_lottie

from logic import get_account_info, get_chatbot_list, new_chat, ChatbotCanvas


TEMP_DIR = '/disk/temp'
os.makedirs(TEMP_DIR, exist_ok=True)


user_info = get_account_info(st.context.cookies.get('ajs_anonymous_id', None))


@st.cache_data
def animation():
    st_lottie("https://lottie.host/0fba30a0-5a7e-4e3d-b741-f9e3b888a380/mh9GuBuzlD.json", height=200)

def reset_selection(cm_pills: bool):
    if cm_pills:
        st.session_state.cm_pills_reset_key += 1
    else:
        st.session_state.rm_pills_reset_key += 1


if user_info:
    if user_info[6] is None:
        animation()
        st.info("""
            –í–∏–¥–∏–º–æ, –≤—ã –∑–∞–±—ã–ª–∏ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–π OpenAI API-–∫–ª—é—á.

            –ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–ª—é—á, —Ç–æ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–ê–∫–∫–∞—É–Ω—Ç" –∏ —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ —Ç–∞–º.

            –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –∫–ª—é—á–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è:
            > 1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç [OpenAI](https://platform.openai.com/settings/organization/general);
            > 2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ—é —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å;
            > 3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª API Keys;
            > 4. –ù–∞–∂–º–∏—Ç–µ "Create new secret key" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞;
            > 5. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ê–∫–∫–∞—É–Ω—Ç".

            –¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å DeepSeek API-–∫–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–¥–µ–ª—è–º DeepSeek.
        """
                )
        st.stop()

    chat_list = get_chatbot_list('chats')

    if len(chat_list) == 0:
        st.write('–£ —Ç–µ–±—è –µ—â—ë –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ —á–∞—Ç–∞? –ü–æ—Ä–∞ —Å–æ–∑–¥–∞—Ç—å - –Ω–∞–∂–º–∏ "–ù–æ–≤—ã–π —á–∞—Ç"')

    context = st.sidebar.selectbox(
        '–í—ã–±–µ—Ä–∏ —á–∞—Ç',
        (_name for _name in chat_list.keys()),
        index=len(chat_list) - 1
    )

    if st.sidebar.button('–ù–æ–≤—ã–π —á–∞—Ç'):
        new_chat('chats')

    if 'model' not in st.session_state:
        st.session_state.model = None
    #     st.session_state.model = 'gpt-4.1-mini'
        # st.session_state.openai_client = OpenAI(api_key=user_info[6])
    if 'cm_pills_reset_key' not in st.session_state:
        st.session_state.cm_pills_reset_key = 0
    if 'rm_pills_reset_key' not in st.session_state:
        st.session_state.rm_pills_reset_key = 0
    if 'hd_speech' not in st.session_state:
        st.session_state.hd_speech = False

    if context:
        chat_canvas = ChatbotCanvas(context, chat_list[context], page='chats')

        with st.sidebar:
            st.divider()
            st.write('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏–º —á–∞—Ç–æ–º:\n')

            available_classic_models = [
                'gpt-4.1',
                'gpt-4.1-mini',
                'gpt-4.1-nano',
                'gpt-4o',
                'chatgpt-4o-latest',
                'gpt-4-turbo'
            ]
            available_reasoning_models = [
                'o3-mini',
                'o4-mini'
            ]

            if user_info[7]:
                available_classic_models.append('deepseek-chat')
                available_reasoning_models.append('deepseek-reasoner')

            tab1, tab2 = st.tabs(['üí¨ –û–±—ã—á–Ω—ã–µ –º–æ–¥–µ–ª–∏', 'üß† Reasoning-–º–æ–¥–µ–ª–∏'])

            classic_models_pills = tab1.empty()
            reasoning_models_pills = tab2.empty()

            classic_models_pills.pills(
                'classic',
                available_classic_models,
                label_visibility='collapsed',
                default=None,
                key=f'cm_pills_{st.session_state.cm_pills_reset_key}',
                on_change=reset_selection,
                args=(False,)
            )
            reasoning_models_pills.pills(
                'reasoning',
                available_reasoning_models,
                label_visibility='collapsed',
                default=None,
                key=f'rm_pills_{st.session_state.rm_pills_reset_key}',
                on_change=reset_selection,
                args=(True,)
            )

            cm_pills_value = st.session_state[f'cm_pills_{st.session_state.cm_pills_reset_key}']
            rm_pills_value = st.session_state[f'rm_pills_{st.session_state.rm_pills_reset_key}']

            st.session_state.model = cm_pills_value if cm_pills_value else rm_pills_value

            if st.session_state.model and 'deepseek' in st.session_state.model:
                st.session_state.openai_client = OpenAI(
                    api_key=user_info[7], base_url="https://api.deepseek.com")
            else:
                st.session_state.openai_client = OpenAI(api_key=user_info[6])

            st.toggle('–°–æ—Ö—Ä–∞–Ω—è—Ç—å –∏—Å—Ç–æ—Ä–∏—é', help="""
                GPT –º–æ–¥–µ–ª—å –±—É–¥–µ—Ç –ø–æ–º–Ω–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ (–ø—Ä–∏ —ç—Ç–æ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å
                –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API —Å–∏–ª—å–Ω–æ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è).

                –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—é –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å, —Ç–æ –º–æ–¥–µ–ª—å –±—É–¥–µ—Ç –ø–æ–º–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ
                —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å (–∏—Å—Ç–æ—Ä–∏—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø—Ä–∏ —ç—Ç–æ–º –≤—Å–µ —Ä–∞–≤–Ω–æ –±—É–¥–µ—Ç
                –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è).
                """,
                      key='save_history')

            st.toggle('–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–ø—Ç', help="""
                –ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –≤–∞—à –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω
                –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞.

                –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–Ω–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–µ "–°–æ—Ö—Ä–∞–Ω—è—Ç—å –∏—Å—Ç–æ—Ä–∏—é".
            """,
                      key='optimize_prompt', disabled=True if st.session_state.save_history else False)

            st.toggle('HD –æ–∑–≤—É—á–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π', help=""" 
                –ü—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞, –æ–∑–≤—É—á–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è —Å –ø–æ–º–æ—â—å—é Text-to-Speech –º–æ–¥–µ–ª–∏
                OpenAI  (tts-1), –∫–æ—Ç–æ—Ä–∞—è –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∑–≤—É—á–∞–Ω–∏—è –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–∞.

                –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ tts-1 —è–≤–ª—è–µ—Ç—Å—è –ø–ª–∞—Ç–Ω—ã–º.

                –ï—Å–ª–∏ –≤—ã –æ—Ç–∫–ª—é—á–∏—Ç–µ —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç, –æ–∑–≤—É—á–∫–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è —Å –ø–æ–º–æ—â—å—é gTTS (Google Text-to-Speech), 
                –∫–æ—Ç–æ—Ä—ã–π —è–≤–ª—è–µ—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º, –Ω–æ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –º–µ–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –∑–≤—É—á–∞–Ω–∏–µ –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å HD –≤–∞—Ä–∏–∞–Ω—Ç–æ–º.

            """,
                      key='hd_speech')

            if st.button('–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è/–æ–ø–∏—Å–∞–Ω–∏–µ —á–∞—Ç–∞'):
                chat_canvas.change_info()

            if st.button('–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é'):
                chat_canvas.clear()
                st.rerun()

            if st.button('–£–¥–∞–ª–∏—Ç—å —á–∞—Ç', type='primary'):
                chat_canvas.delete()
                st.rerun()

            st.write(st.session_state)

        for filename in os.listdir(TEMP_DIR):
            if filename.startswith(f'voice_message_{st.session_state.user_id}'):
                os.remove(os.path.join(TEMP_DIR, filename))

        if 'repeat_message' in st.session_state:
            st.rerun()
            del st.session_state['repeat_message']

            if st.session_state.model is None:
                st.toast('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å')
            else:
                chat_canvas.send_message(st.session_state.repeat_message)
                st.rerun()

        if prompt := st.chat_input("–í–≤–µ–¥–∏ —Å–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ...", disabled=st.session_state.model is None):
            chat_canvas.send_message(prompt)
            st.rerun()
